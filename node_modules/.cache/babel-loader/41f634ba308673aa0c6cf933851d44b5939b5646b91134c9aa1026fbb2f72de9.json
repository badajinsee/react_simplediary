{"ast":null,"code":"var _jsxFileName = \"/Users/hansunjin/Documents/simplediary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Textview = ({\n  text\n}) => {\n  _s();\n  useEffect(() => {\n    console.log(`update :: text :: ${text}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n};\n_s(Textview, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Textview;\nconst CountView = ({\n  count\n}) => {\n  _s2();\n  useEffect(() => {\n    console.log(`update :: text :: ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_s2(CountView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = CountView;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountView, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textview, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s3(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c3 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Textview\");\n$RefreshReg$(_c2, \"CountView\");\n$RefreshReg$(_c3, \"OptimizeTest\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Textview","text","_s","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","CountView","count","_s2","_c2","OptimizeTest","_s3","setCount","setText","style","padding","onClick","value","onChange","e","target","_c3","$RefreshReg$"],"sources":["/Users/hansunjin/Documents/simplediary/src/OptimizeTest.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Textview = ({ text }) => {\n  useEffect(() => {\n    console.log(`update :: text :: ${text}`);\n  });\n  return <div>{text}</div>;\n};\n\nconst CountView = ({ count }) => {\n  useEffect(() => {\n    console.log(`update :: text :: ${count}`);\n  });\n  return <div>{count}</div>;\n};\n\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div style={{ padding: 50 }}>\n      <div>\n        <h2>count</h2>\n        <CountView count={count} />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <Textview text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}